name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y make gcc libpq-dev

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          sleep 1
        done

    - name: Get the container ID for the PostgreSQL service
      id: get_container_id
      run: echo "Container ID: $(docker ps -q -f ancestor=postgres:16)"
      continue-on-error: false

    - name: Install PostgreSQL dev libraries in container
      run: |
        docker exec $(docker ps -q -f ancestor=postgres:16) bash -c "apt-get update && apt-get install -y postgresql-server-dev-16 make gcc"

    - name: Copy source code to container
      run: |
        docker cp . $(docker ps -q -f ancestor=postgres:16):/usr/src/kor_search

    - name: Build and install extension in container
      run: |
        docker exec $(docker ps -q -f ancestor=postgres:16) bash -c "cd /usr/src/kor_search && make && make install"

    - name: Setup PostgreSQL extension
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d testdb -c "CREATE EXTENSION kor_search;"

    - name: Run tests
      env:
        PGPASSWORD: postgres
      run: |
        echo "Running tests..."
        psql -h localhost -U postgres -d testdb -f sql/kor_search--1.0.0.sql

    - name: Verify installation
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d testdb -c "\dx"
