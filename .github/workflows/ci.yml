name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y make gcc libpq-dev

    - name: Install PostgreSQL dev libraries in container
      run: |
        CONTAINER_ID=$(docker ps -q -f ancestor=postgres:16)
        docker exec $CONTAINER_ID bash -c "apt-get update && apt-get install -y postgresql-server-dev-16 make gcc"

    - name: Copy source code to container
      run: |
        CONTAINER_ID=$(docker ps -q -f ancestor=postgres:16)
        docker cp . $CONTAINER_ID:/usr/src/kor_search

    - name: Build and install extension in container
      run: |
        CONTAINER_ID=$(docker ps -q -f ancestor=postgres:16)
        docker exec $CONTAINER_ID bash -c "cd /usr/src/kor_search && make && make install"

    - name: Install pg_trgm extension
      env:
        PGPASSWORD: postgres
      run: |
        CONTAINER_ID=$(docker ps -q -f ancestor=postgres:16)
        docker exec $CONTAINER_ID bash -c "psql -U postgres -d testdb -c 'CREATE EXTENSION IF NOT EXISTS pg_trgm;'"

    - name: Setup kor_search extension
      env:
        PGPASSWORD: postgres
      run: |
        CONTAINER_ID=$(docker ps -q -f ancestor=postgres:16)
        docker exec $CONTAINER_ID bash -c "psql -U postgres -d testdb -c 'CREATE EXTENSION kor_search;'"

    - name: Run SQL Tests
      env:
        PGPASSWORD: postgres
      run: |
        CONTAINER_ID=$(docker ps -q -f ancestor=postgres:16)
        docker exec $CONTAINER_ID bash -c "psql -U postgres -d testdb -f /usr/src/kor_search/test/test_cases.sql"

    - name: Verify installation
      env:
        PGPASSWORD: postgres
      run: |
        CONTAINER_ID=$(docker ps -q -f ancestor=postgres:16)
        docker exec $CONTAINER_ID bash -c "psql -U postgres -d testdb -c '\dx'"
